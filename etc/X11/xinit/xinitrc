#exec chromium
#exec openbox-session

#xrandr > /home/pi/tada.txt

set -x #echo on

export DISPLAY=:0

BOOT_DIR="/boot"
if lsblk | grep -q $BOOT_DIR/firmware; then
    BOOT_DIR="$BOOT_DIR/firmware"
fi

if [ ! -s $BOOT_DIR/candle_kiosk.txt ]
then
#    echo "The candle_kiosk.txt file was empty, so not loading the browser" >> $BOOT_DIR/candle_log.txt
    exit 0
fi


HDMI_PORT=$(DISPLAY=:0 xrandr | grep -m 1 ' connected' | cut -d' ' -f1)
echo "HDMI PORT: $HDMI_PORT"

GEO="$(fbset -s | awk '$1 == "geometry" { print $2":"$3 }')"
WIDTH=$(echo "$GEO" | cut -d: -f1)
HEIGHT=$(echo "$GEO" | cut -d: -f2)

#echo "Resolution: $WIDTH x $HEIGHT" > /home/pi/reso.txt

xset -display :0 s off
xset -display :0 s noblank
xset -display :0 -dpms

if [ -f $BOOT_DIR/rotate180.txt ]
then
  # Rotating 180 degrees
  xrandr --output $HDMI_PORT --rotate inverted
  xinput --set-prop 'ILITEK ILITEK-TP' 'Coordinate Transformation Matrix' -1 0 1 0 -1 1 0 0 1
  xinput --set-prop 'HID 222a:0001' 'Coordinate Transformation Matrix' -1 0 1 0 -1 1 0 0 1
else
  # Not rotating
  xrandr --output $HDMI_PORT --rotate normal
  xinput --set-prop 'ILITEK ILITEK-TP' 'Coordinate Transformation Matrix' 1 0 0 0 1 0 0 0 1
  xinput --set-prop 'HID 222a:0001' 'Coordinate Transformation Matrix' 1 0 0 0 1 0 0 0 1
fi




if [ -f $BOOT_DIR/candle_kiosk_require_login.txt ]
then
    echo "clearing old chromium session data"
    rm -rf /home/pi/.webthings/chromium/Default/Sessions/*
    #echo '{"AllowFileSelectionDialogs": false, "AudioCaptureAllowed": false, "AutoFillEnabled": false, "PasswordManagerEnabled": false}' > /etc/chromium/policies/managed/candle.json
fi

rm -rf /home/pi/.config/chromium/*
rm -rf /home/pi/.webthings/chromium/Singleton*
rm -rf /home/pi/.webthings/chromium/BrowserMetrics/*

sed -i 's/"exited_cleanly":false/"exited_cleanly":true/' /home/pi/.webthings/chromium/'Local State'
sed -i 's/"exited_cleanly":false/"exited_cleanly":true/; s/"exit_type":"[^"]\+"/"exit_type":"Normal"/' /home/pi/.webthings/chromium/Default/Preferences

if [ -f $BOOT_DIR/post_bootup_actions.sh ]; then
  if [ -f $BOOT_DIR/rotate180.txt ]; then
    feh --bg-fill $BOOT_DIR/splash_updating180.png &
  else
    feh --bg-fill $BOOT_DIR/splash_updating.png &
  fi
else
  
  if [ -f $BOOT_DIR/splash.mp4 ];
  then
    echo "zzz"
#    cvlc -L -f --no-osd --no-audio --fullscreen --video-on-top $BOOT_DIR/splash.mp4 &
    #if [ -f $BOOT_DIR/rotate180.txt ]
    #then
    #  cvlc -L -f --no-osd --no-audio --fullscreen --video-on-top $BOOT_DIR/splash180.mp4 &    
    #else
    #  cvlc -L -f --no-osd --no-audio --fullscreen --video-on-top $BOOT_DIR/splash.mp4 &
    #fi
    #omxplayer -b --win "0 0 $resolution" --loop $BOOT_DIR/splash.mp4 &
  fi
#  sleep 1
#  feh --bg-fill $BOOT_DIR/splashalt.png

fi
#feh --bg-fill $BOOT_DIR/splash.png
#windowsize=$(xdpyinfo | awk '/dimensions/{print $2}')

#sleep 15

if [ ! -f $BOOT_DIR/hide_mouse_pointer.txt ]
then
    unclutter -idle 0.2 -root -display :0 &
fi

#if [ -f /home/pi/candle/resolution.txt ]
#then
#rm /home/pi/candle/resolution.txt
#fi

#echo "$windowsize" > /home/pi/candle/resolution.txt
#sed -i 's/x/ /' /home/pi/candle/resolution.txt
#resolution=$(cat /home/pi/candle/resolution.txt)


#if tr -d '\0' < /proc/device-tree/model | grep -q "Raspberry Pi 5"; then
#    sleep 10
#else
#    sleep 15
#fi


file="$BOOT_DIR/candle_kiosk.txt"
url=$(cat "$file")
wrapper=/home/pi/candle/start.html
echo "kiosk URL: $url"


if [ -z "$url" ]
then
#    echo "The candle_kiosk.txt file was empty, so not loading the browser" >> $BOOT_DIR/candle_log.txt
    exit 0
else
    cp /home/pi/candle/start_bak.html /home/pi/candle/start.html
    sed -i "s|replace_url_here|$url|g" /home/pi/candle/start.html
fi

if [ ! -f /home/pi/candle/start.html ]; then
#  echo "Error, start.html was missing" >> $BOOT_DIR/candle_log.txt
  wrapper=http://localhost:8080
fi

#timeout 60 bash -c 'until echo > /dev/tcp/localhost/8080; do sleep 1; done'
#curl --head -X GET --retry 10 --retry-connrefused --retry-delay 1 $url

export CANDLE_URL=$url

timeout --foreground -s TERM 30s bash -c \
   'while [[ "$(curl -s -o /dev/null -m 3 -L -w ''%{http_code}'' $CANDLE_URL)" != "200" ]];\
   do echo "Waiting for url" && sleep 2;\
   done;\
   echo "Server seems to be up: $CANDLE_URL"'

#wait-for-url $url

#sleep 5

chmod +x /home/pi/candle/unsnap.sh
python3 /home/pi/candle/unsnap.py >/dev/null 2>&1 &

#( sleep 10 ; pkill cvlc; pkill vlc ) &

pkill cvlc
pkill vlc

#exec chromium --kiosk /home/pi/candle/start.html --load-extension=/home/pi/candle/virtual_keyboard --disable-infobars --noerrdialogs --disable-file-system \
exec chromium --kiosk $url --load-extension=/home/pi/candle/virtual_keyboard --disable-infobars --noerrdialogs --disable-file-system \
 --block-new-web-contents --disable-remote-fonts --disable-speech-api --no-crash-upload --force-tablet-mode --enable-touchview \
 --disable-translate --enable-top-drag-gesture --pull-to-refresh=2 --progress-bar-animation --no-first-run --deny-permission-prompts \
 --disable-breakpad --enable-auto-reload --unsafely-treat-insecure-origin-as-secure=http://localhost:8080 --disable-seccomp-filter-sandbox \
 --disable-fullscreen-tab-detaching --disable-hang-monitor --disable-pinch --overscroll-history-navigation=0 --disk-cache-size=1 \
 --dns-prefetch-disable --enable-profiling=0 --user-data-dir=/home/pi/.webthings/chromium/ --disable-features=Translate,TranslateUI \
 --disable-translate-new-ux --disable-suggestions-ui --disable-sync --enable-features=WebUIDarkMode --force-dark-mode --homepage=http://localhost:8080 \
 --disable-session-crashed-bubble --disk-cache-dir=/dev/null --overscroll-history-navigation=disabled --no-referrers \
 --disable-gpu-compositing --window-position=0,0 -window-size=$WIDTH,$HEIGHT --start-maximized --start-fullscreen
