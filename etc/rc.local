#!/bin/bash

#logger In rc.local
echo "$(date) - Candle: in rc.local" >> /dev/kmsg


totalk=$(awk '/^MemTotal:/{print $2}' /proc/meminfo)
#logger total memory: $totalk

if [ "$totalk" -lt 600000 ]
then
  echo "Candle: low memory, so enabling swap: $totalk" >> /dev/kmsg
  touch /boot/candle_swap_enabled.txt
  /usr/sbin/dphys-swapfile setup
  /usr/sbin/dphys-swapfile swapon
else
  echo "Candle: enough memory, no need to enable swap: $totalk" >> /dev/kmsg
  if [ -e /boot/candle_swap_enabled.txt ] 
  then
    rm /boot/candle_swap_enabled.txt
  fi
  /usr/sbin/dphys-swapfile swapoff
  if [ -e /home/pi/.webthings/swap ] 
  then
    rm /home/pi/.webthings/swap
  fi
fi



# SELF-REPAIR

# Fix missing gateway, just in case something went totally wrong.

if [ ! -f /home/pi/webthings/gateway/build/app.js ] \
|| [ ! -f /home/pi/webthings/gateway/build/static/index.html ] \
|| [ ! -d /home/pi/webthings/gateway/node_modules ] \
|| [ ! -d /home/pi/webthings/gateway/build/static/bundle ] \
|| [ ! -f /home/pi/webthings/gateway/.post_upgrade_complete ]; 
then

  if [ -f /boot/developer.txt ] || [ -f /boot/candle_cutting_edge.txt ];
  then
    systemctl start ssh.service
  fi

  echo "missing build/app.js - attempting repair"
  echo "Candle: ERROR! /home/pi/webthings/gateway/build/app.js file was missing. Attempting repair. (rc)" >> /dev/kmsg
  echo "$(date) - broken controller detected (rc)" >> /boot/candle_log.txt

  if [ -f /boot/rotate180.txt ];
  then
    /bin/ply-image /boot/splash_updating180.png
  else
    /bin/ply-image /boot/splash_updating.png
  fi

  if [ -d /ro ]
  then
    echo "starting controller repair in /ro... (rc)" >> /boot/candle_log.txt
    echo "starting controller repair in /ro... (rc)" >> /dev/kmsg
    # This shouldn't even be possible really 
    echo "setting to RW"
    mount -o remount,rw /ro
      
      
chroot /ro sh -c "$(cat <<END
cd /home/pi

# The fresh backup gets once chance
if [ -f /home/pi/controller_backup_fresh.tar ];
then
echo "extracting controller_backup_fresh.tar"
tar -xf controller_backup_fresh.tar
rm /home/pi/controller_backup_fresh.tar

elif [ -f /home/pi/controller_backup.tar ];
then
echo "extracting controller_backup.tar"
tar -xf controller_backup.tar

else

if [ -f /boot/candle_cutting_edge.txt ]; then
wget https://raw.githubusercontent.com/createcandle/install-scripts/main/install_candle_controller.sh -O ./install_candle_controller.sh
else
curl -s https://api.github.com/repos/createcandle/install-scripts/releases/latest \
| grep "tarball_url" \
| cut -d : -f 2,3 \
| tr -d \" \
| sed 's/,*$//' \
| wget -qi - -O install-scripts.tar

tar -xf install-scripts.tar
rm install-scripts.tar

for directory in createcandle-install-scripts*; do
[[ -d $directory ]] || continue
echo "Directory: $directory"
mv -- "$directory" ./install-scripts
done

mv ./install-scripts/install_candle_controller.sh ./install_candle_controller.sh
rm -rf ./install-scripts
fi


# Check if the install_candle_controller.sh file now exists
if [ ! -f install_candle_controller.sh ]; then
echo
echo "ERROR, missing install_candle_controller.sh file"
echo "$(date) - Failed to download install_candle_controller script" >> /boot/candle_log.txt
echo

# Show error image
if [ -e "/bin/ply-image" ] && [ -e /dev/fb0 ] && [ -f /boot/error.png ]; then
/bin/ply-image /boot/error.png
sleep 7200
fi

exit 1
fi

chmod +x ./install_candle_controller.sh
sudo -u pi ./install_candle_controller.sh
wait
rm ./install_candle_controller.sh



fi
END
)"

    # re-enable read-only mode
    echo "setting back to RO"
    mount -o remount,ro /ro
      
  else
    cd /home/pi || exit
    
    # If a fresh backup file exists, restore that. It gets one chance.
    if [ -f /home/pi/controller_backup_fresh.tar ];
    then
      tar -xvf controller_backup_fresh.tar
      echo "$(date) - self-repair: restored fresh controller backup (rc)" >> /boot/candle_log.txt
      echo "$(date) - self-repair: restored fresh controller backup (rc)" >> /dev/kmsg
      rm /home/pi/controller_backup_fresh.tar
    
    # Otherwise fall back to the backup that came with the disk image
    elif [ -f /home/pi/controller_backup.tar ];
    then
      tar -xvf controller_backup.tar
      echo "$(date) - self-repair: restored controller backup (rc)" >> /boot/candle_log.txt
      echo "$(date) - self-repair: restored controller backup (rc)" >> /dev/kmsg
      
    
    # If all else fails, try a complete rebuild
    else
        echo "$(date) - self-repair: starting controller regeneration... (rc)" >> /boot/candle_log.txt
        echo "$(date) - self-repair: starting controller regeneration... (rc)" >> /dev/kmsg
        
        
        if [ -f /boot/candle_cutting_edge.txt ]; then
            wget https://raw.githubusercontent.com/createcandle/install-scripts/main/install_candle_controller.sh -O ./install_candle_controller.sh
        else
            curl -s https://api.github.com/repos/createcandle/install-scripts/releases/latest \
            | grep "tarball_url" \
            | cut -d : -f 2,3 \
            | tr -d \" \
            | sed 's/,*$//' \
            | wget -qi - -O install-scripts.tar

            tar -xf install-scripts.tar
            rm install-scripts.tar

            for directory in createcandle-install-scripts*; do
              [[ -d $directory ]] || continue
              echo "Directory: $directory"
              mv -- "$directory" ./install-scripts
            done

            mv ./install-scripts/install_candle_controller.sh ./install_candle_controller.sh
            rm -rf ./install-scripts
            #echo
            #echo "result:"
            #ls install_candle_controller.sh
        fi


        # Check if the install_candle_controller.sh file now exists
        if [ ! -f install_candle_controller.sh ]; then
            echo
            echo "ERROR, self-repair: missing install_candle_controller.sh file"
            echo "Candle: self-repair: failed to download install_candle_controller script" >> /boot/kmsg
            echo "$(date) - self-repair:  failed to download install_candle_controller script" >> /boot/candle_log.txt
            echo

            # Show error image
            if [ -e "/bin/ply-image" ] && [ -e /dev/fb0 ] && [ -f /boot/error.png ]; then
                /bin/ply-image /boot/error.png
                sleep 7200
            fi

            exit 1
        fi

        chmod +x ./install_candle_controller.sh
        sudo -u pi ./install_candle_controller.sh
        wait
        rm ./install_candle_controller.sh
        
    fi
  fi

  if [ -f /boot/developer.txt ] || [ -f /boot/candle_cutting_edge.txt ];
  then
    echo "sleeping 60 seconds to make sure user can login via SSH"
    sleep 60
  fi
  sleep 5
  
  if [ -f /home/pi/webthings/gateway/build/app.js ] \
  && [ -f /home/pi/webthings/gateway/.post_upgrade_complete ] \
  && [ -f /home/pi/webthings/gateway/build/static/index.html ] \
  && [ -d /home/pi/webthings/gateway/node_modules ] \
  && [ -d /home/pi/webthings/gateway/build/static/bundle ];
  then
    echo "$(date) - controller regeneration complete (rc)" >> /boot/candle_log.txt
    echo "$(date) - controller regeneration complete (rc)" >> /dev/kmsg
    #reboot now
    #sleep 5
    
  else
    echo "$(date) - controller regeneration failed (rc)" >> /boot/candle_log.txt
    echo "$(date) - controller regeneration failed (rc)" >> /dev/kmsg
    
    # Show error image
    pkill xinit
    sleep 1
    if [ -e "/bin/ply-image" ]; then
      /bin/ply-image /boot/error.png
    fi
    sleep 7200
  fi
  
  exit 0
fi


echo "Candle: rc.local: half way" >> /dev/kmsg



# Start X server
if [ -f /boot/candle_kiosk.txt ]
then
  if [ "$totalk" -gt 1500000 ] || [ -f /boot/candle_kiosk_forced.txt ]
  then
    echo "Candle: Enough memory to start X server" >> /dev/kmsg
    logger Starting X
    if [ -n "$(ls /dev/input/by-id/usb-ILITEK_ILITEK-TP-mouse 2>/dev/null)" ]
    then
      # Raspad touchscreen
      su - pi -c 'startx -- -nocursor &'
    else
      # any mouse
      if [ -n "$(ls /dev/input/by-id/*-mouse 2>/dev/null)" ]
      then
        su - pi -c startx &
        #su - pi -c 'unclutter -idle 10 -root -display :0 &'
      else
        if [ ! -f /boot/hide_mouse_pointer.txt ]
        then
          su - pi    startx &
        else
          su - pi -c 'startx -- -nocursor &'
          #su - pi -c 'unclutter -idle 0 -root -display :0 &'
        fi
      fi
    fi
  fi
fi


# Generate debug file if requested
if [ -f /boot/generate_debug.txt ]; then
  rm /boot/generate_debug.txt
  sleep 5
  echo "Candle: generating debug file" >> /dev/kmsg
  rm /boot/debug.txt
  chmod +x /home/pi/candle/debug.sh
  /home/pi/candle/debug.sh > /boot/debug.txt
fi

# clean up the journal
if [ ! -f /boot/developer.txt ]; then
  journalctl --vacuum-size=10K
fi

# Do aditional checks for missing files, and restore them if possible. late.sh does this too, as a fallback.
if [ -f /boot/restore_boot_backup.txt ] && [ ! -d /ro ]; then
    if [ -d /home/pi/candle/configuration-files-backup ]; then
        if rsync --ignore-existing --dry-run --inplace -vri /home/pi/candle/configuration-files-backup/ / | grep -q  +++++; then
            echo "Candle: ERROR, rc.local detected missing files. Attempting to fix" >> /dev/kmsg
            echo "$(date) - ERROR, rc.local detected missing files. Attempting to fix." >> /boot/candle_log.txt
            if [ -d /ro ]; then
                if [ -d /ro/home/pi/candle/configuration-files-backup ]; then
                    sudo mount -o remount,ro /rw
                    rsync --ignore-existing --inplace -vri /ro/home/pi/candle/configuration-files-backup/ /ro/ > /boot/candle_fix.txt
                    sudo mount -o remount,ro /ro
                fi
            else
                rsync -vr --ignore-existing --inplace /home/pi/candle/configuration-files-backup/ / >> /dev/kmsg
            fi

            sleep 2
            if rsync --ignore-existing --inplace --dry-run -vri /home/pi/candle/configuration-files-backup/* / | grep -q  +++++; then
                echo "Candle: ERROR, rc.local: missing files fix failed" >> /dev/kmsg
                echo "$(date) - ERROR, rc.local: missing files fix failed. See candle_fix_failed.txt" >> /boot/candle_log.txt
                rsync --ignore-existing --inplace --dry-run -vri /home/pi/candle/configuration-files-backup/ / > /boot/candle_fix_failed.txt
            else
                echo "Candle: rc.local: missing files fix succeeded" >> /dev/kmsg
                echo "$(date) - rc.local: missing files fix succeeded" >> /boot/candle_log.txt
                if [ -f /boot/candle_failed_fix.txt ]; then
                    rm /boot/candle_failed_fix.txt
                fi
            fi
        fi
    else
        echo "Candle: rc.local: warning, configuration files backup dir does not exist" >> /dev/kmsg
    fi
fi

echo "$(date) - Candle: end of rc.local" >> /dev/kmsg
exit 0


